mutate(antiguedad = 2023 - yearc)
bw <- npplregbw(formula = rent ~ area | antiguedad,
data = MunichRent,
regtype='ll')
bw <- npplregbw(formula = rent ~ area | antiguedad,
data = MunichRent,
regtype='ll')
#Estimamos
model.pl <- npplreg(bw)
#Estimamos
model.pl <- npplreg(bw)
par(mar = c(1, 1, 1, 1))
summary(model.pl)
par(mar = c(1, 1, 1, 1))
g.robinson <- npplot(bw,
perspective=F,
plot.errors.method="bootstrap",
plot.behavior="plot-data")
g <- fitted(g.robinson$plr2)
se <- g.robinson[["plr2"]][["merr"]]
lci <- g - se[,1]
uci <- g + se[,2]
#Este objeto nos dicen dónde fueron evaluados
exp.eval <- g.robinson[["plr2"]][["evalz"]][["V1"]]
fitted <- data.frame(exp.eval, g,lci,uci)
ggplot() +
geom_point(data = MunichRent, aes(antiguedad,rent), color='black', alpha=0.1 ) +
geom_line(data=fitted, aes(exp.eval, g), linetype='solid')+
geom_line(data=fitted, aes(exp.eval, uci), linetype='dashed')+
geom_line(data=fitted, aes(exp.eval, lci), linetype='dashed')+
theme_minimal()
g <- fitted(g.robinson$plr2)
se <- g.robinson[["plr2"]][["merr"]]
lci <- g - se[,1]
uci <- g + se[,2]
#Este objeto nos dicen dónde fueron evaluados
exp.eval <- g.robinson[["plr2"]][["evalz"]][["V1"]]
fitted <- data.frame(exp.eval, g,lci,uci)
rm(list=ls())
rm(list=ls())
#install.packages("ggplot2")
library(ggplot2)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("nbastatR")
library(nbastatR)
#install.packages("formattable")
library(formattable)
Sys.setenv("VROOM_CONNECTION_SIZE" = 999999)
?bref_players_stats
nba <- bref_players_stats(seasons = 2011:2012, tables = c("advanced", "per_game"))
View(dataBREFPlayerAdvanced)
View(dataBREFPlayerAdvanced)
dataBREFPlayerAdvanced$yearSeason
unique(dataBREFPlayerAdvanced$yearSeason)
unique(dataBREFPlayerAdvanced$namePlayer)
nba <- bref_players_stats(seasons = 2012, tables = c("advanced", "per_game"))
View(nba)
View(dataBREFPlayerPerGame)
View(dataBREFPlayerPerGame)
rm(list=ls())
player_stats_pergame <- bref_players_stats(seasons = 2012:2023, tables = c("per_game","advanced"), join_data = F )
player_stats_pergame <- bref_players_stats(seasons = 2012, tables = c("per_game","advanced"), join_data = F )
View(dataBREFPlayerAdvanced)
View(dataBREFPlayerAdvanced)
player_stats_pergame <- bref_players_stats(seasons = 2012:2013, tables = c("per_game","advanced"), join_data = F )
adv_names <- colnames(dataBREFPlayerAdvanced)
stat_names <- colnames(dataBREFPlayerPerGame)
nombres_comunes <- intersect( adv_names, stat_names)
nombres_comunes
adv_names
stat_names
player_stats_total <- bref_players_stats(seasons = 2012:2023, tables = c("totals"))
player_stats_total <- bref_players_stats(seasons = 2012, tables = c("totals"))
View(dataBREFPlayerTotals)
View(dataBREFPlayerTotals)
player_stats_pergame <- bref_players_stats(seasons = 2012:2023, tables = c("per_game","advanced", "totals"), join_data = T)
View(player_stats_pergame)
View(player_stats_pergame)
View(player_stats_pergame)
View(player_stats_pergame)
rm(list=ls())
Sys.setenv("VROOM_CONNECTION_SIZE" = 999999)
player_stats <- bref_players_stats(seasons = 2011:2023, tables = c("per_game","advanced", "totals"), join_data = T)
player_stats <- bref_players_stats(seasons = 2011:2022, tables = c("per_game","advanced", "totals"), join_data = T)
View(player_stats)
View(player_stats)
?bref_players_stats
unique(player_stats$slugPosition)
player_stats$slugPosition['SG-PG-SF']
player_stats$slugPosition['c']
player_stats$slugPosition['C']
subset(player_stats, slugPosition == 'PF')
subset(player_stats, slugPosition == 'SG-PG-SF')
library(dplyr)
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "C", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG"))
unique(nba_data$slugPosition)
unique(nba_data$position)
for (posicion in unique_pos) {
player_stat <- paste("player_stat", posicion, sep = "_")
assign(player_stat, subset(nba_data, position == posicion))
}
unique_pos <- unique(nba_data$position)
for (posicion in unique_pos) {
player_stat <- paste("player_stat", posicion, sep = "_")
assign(player_stat, subset(nba_data, position == posicion))
}
View(player_stat_C)
View(player_stat_C)
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG"))
unique_pos <- unique(nba_data$position)
for (posicion in unique_pos) {
player_stat <- paste("player_stat", posicion, sep = "_")
assign(player_stat, subset(nba_data, position == posicion))
}
View(nba_data)
View(nba_data)
## Modificacion de panel para mejor uso
# Recodificando para solo tener 5 categorias para posicion
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG")) %>%
rename(namePlayer = name)
## Modificacion de panel para mejor uso
# Recodificando para solo tener 5 categorias para posicion
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG")) %>%
rename(name = namePlayer)
colnames(nba_data)
View(nba_data)
View(nba_data)
## Modificacion de panel para mejor uso
# Recodificando para solo tener 5 categorias para posicion
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG")) %>%
rename(name = namePlayer) %>%
# Seleccionar solo las columnas deseadas
select( name, yearSeason, agePlayer, position,slugTeamBREF, countGames, pctFG, pctFG3, pctFG2, pctEFG, pctFT,slugTeamsBREF,idPlayerNBA,
minutesPerGame,fgmPerGame, fgaPerGame,fg3mPerGame,fg3aPerGame,fg2mPerGame,fg2aPerGame,ftmPerGame,ftaPerGame,orbPerGame,drbPerGame,trbPerGame,astPerGame,stlPerGame,blkPerGame,tovPerGame,pfPerGame,ptsPerGame,
minutes,ratioPER,pctTrueShooting,pct3PRate,pctFTRate,pctORB,pctDRB,pctTRB,pctAST,pctSTL,pctBLK,pctTOV,pctUSG,ratioOWS,ratioDWS,ratioWS,ratioWSPer48,ratioOBPM,ratioDBPM,ratioBPM,ratioVORP,
minutesTotals,fgmTotals,fgaTotals,fg3mTotals,fg3aTotals,fg2mTotals,fg2aTotals,ftmTotals,ftaTotals,orbTotals,drbTotals,trbTotals,astTotals,stlTotals,blkTotals,tovTotals,pfTotals,ptsTotals,urlPlayerBREF)
View(nba_data)
View(nba_data)
View(nba_data)
View(nba_data)
## Modificacion de panel para mejor uso
# Recodificando para solo tener 5 categorias para posicion
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG")) %>%
rename(name = namePlayer) %>%
filter(nchar(slugTeamsBREF) <= 3) %>%
# Seleccionar solo las columnas deseadas
select( name, yearSeason, agePlayer, position,slugTeamBREF, countGames, pctFG, pctFG3, pctFG2, pctEFG, pctFT,slugTeamsBREF,idPlayerNBA,
minutesPerGame,fgmPerGame, fgaPerGame,fg3mPerGame,fg3aPerGame,fg2mPerGame,fg2aPerGame,ftmPerGame,ftaPerGame,orbPerGame,drbPerGame,trbPerGame,astPerGame,stlPerGame,blkPerGame,tovPerGame,pfPerGame,ptsPerGame,
minutes,ratioPER,pctTrueShooting,pct3PRate,pctFTRate,pctORB,pctDRB,pctTRB,pctAST,pctSTL,pctBLK,pctTOV,pctUSG,ratioOWS,ratioDWS,ratioWS,ratioWSPer48,ratioOBPM,ratioDBPM,ratioBPM,ratioVORP,
minutesTotals,fgmTotals,fgaTotals,fg3mTotals,fg3aTotals,fg2mTotals,fg2aTotals,ftmTotals,ftaTotals,orbTotals,drbTotals,trbTotals,astTotals,stlTotals,blkTotals,tovTotals,pfTotals,ptsTotals,urlPlayerBREF)
View(nba_data)
View(nba_data)
unique(nba_data$slugTeamBREF)
unique(nba_data$slugTeamsBREF)
for (posicion in unique_pos) {
player_stat <- paste("player_stat", posicion, sep = "_")
assign(player_stat, subset(nba_data, position == posicion))
}
View(player_stat_PF)
View(player_stat_PF)
write.csv(nba_data, file.path(ruta_carpeta, "player_stats.csv"), row.names = FALSE)
#Especificar la ruta donde se guardara
ruta_carpeta <- "C:/Users/famwa/Tesina/NBA/Data/Panel"
write.csv(nba_data, file.path(ruta_carpeta, "player_stats.csv"), row.names = FALSE)
write.csv(player_stat_C, file.path(ruta_carpeta, "player_stat_C.csv"), row.names = FALSE)
write.csv(player_stat_PF, file.path(ruta_carpeta, "player_stat_PF.csv"), row.names = FALSE)
write.csv(player_stat_PG, file.path(ruta_carpeta, "player_stat_PG.csv"), row.names = FALSE)
write.csv(player_stat_SF, file.path(ruta_carpeta, "player_stat_SF.csv"), row.names = FALSE)
write.csv(player_stat_SG, file.path(ruta_carpeta, "player_stat_SG.csv"), row.names = FALSE)
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG")) %>%
rename(name = namePlayer) %>%
filter(nchar(slugTeamsBREF) <= 3) %>%
# Seleccionando solo columnas relevantes
select( name, yearSeason, agePlayer, position,slugTeamBREF, countGames, pctFG, pctFG3, pctFG2, pctEFG, pctFT,slugTeamsBREF,idPlayerNBA,
minutesPerGame,fgmPerGame, fgaPerGame,fg3mPerGame,fg3aPerGame,fg2mPerGame,fg2aPerGame,ftmPerGame,ftaPerGame,orbPerGame,drbPerGame,trbPerGame,astPerGame,stlPerGame,blkPerGame,tovPerGame,pfPerGame,ptsPerGame,
minutes,ratioPER,pctTrueShooting,pct3PRate,pctFTRate,pctORB,pctDRB,pctTRB,pctAST,pctSTL,pctBLK,pctTOV,pctUSG,ratioOWS,ratioDWS,ratioWS,ratioWSPer48,ratioOBPM,ratioDBPM,ratioBPM,ratioVORP,
minutesTotals,fgmTotals,fgaTotals,fg3mTotals,fg3aTotals,fg2mTotals,fg2aTotals,ftmTotals,ftaTotals,orbTotals,drbTotals,trbTotals,astTotals,stlTotals,blkTotals,tovTotals,pfTotals,ptsTotals)
library(ggplot2)
library(tidyverse)
#install.packages("nbastatR")
library(nbastatR)
library(dplyr)
## Modificacion de panel para mejor uso
# Recodificando para solo tener 5 categorias para posicion
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG")) %>%
rename(name = namePlayer) %>%
filter(nchar(slugTeamsBREF) <= 3) %>%
# Seleccionando solo columnas relevantes
select( name, yearSeason, agePlayer, position,slugTeamBREF, countGames, pctFG, pctFG3, pctFG2, pctEFG, pctFT,idPlayerNBA,
minutesPerGame,fgmPerGame, fgaPerGame,fg3mPerGame,fg3aPerGame,fg2mPerGame,fg2aPerGame,ftmPerGame,ftaPerGame,orbPerGame,drbPerGame,trbPerGame,astPerGame,stlPerGame,blkPerGame,tovPerGame,pfPerGame,ptsPerGame,
minutes,ratioPER,pctTrueShooting,pct3PRate,pctFTRate,pctORB,pctDRB,pctTRB,pctAST,pctSTL,pctBLK,pctTOV,pctUSG,ratioOWS,ratioDWS,ratioWS,ratioWSPer48,ratioOBPM,ratioDBPM,ratioBPM,ratioVORP,
minutesTotals,fgmTotals,fgaTotals,fg3mTotals,fg3aTotals,fg2mTotals,fg2aTotals,ftmTotals,ftaTotals,orbTotals,drbTotals,trbTotals,astTotals,stlTotals,blkTotals,tovTotals,pfTotals,ptsTotals)%>%
rename(team = slugTeamBREF)
View(nba_data)
View(nba_data)
for (posicion in unique_pos) {
player_stat <- paste("player_stat", posicion, sep = "_")
assign(player_stat, subset(nba_data, position == posicion))
}
ruta_carpeta <- "C:/Users/famwa/Tesina/NBA/Data/Panel"
write.csv(nba_data, file.path(ruta_carpeta, "player_stats.csv"), row.names = FALSE)
write.csv(player_stat_C, file.path(ruta_carpeta, "player_stat_C.csv"), row.names = FALSE)
ruta_carpeta <- "C:/Users/famwa/Tesina/NBA/Data/Panel"
write.csv(nba_data, file.path(ruta_carpeta, "player_stats_panel.csv"), row.names = FALSE)
write.csv(player_stat_C, file.path(ruta_carpeta, "player_stat_C_panel.csv"), row.names = FALSE)
write.csv(player_stat_PF, file.path(ruta_carpeta, "player_stat_PF_panel.csv"), row.names = FALSE)
write.csv(player_stat_PG, file.path(ruta_carpeta, "player_stat_PG_panel.csv"), row.names = FALSE)
write.csv(player_stat_SF, file.path(ruta_carpeta, "player_stat_SF_panel.csv"), row.names = FALSE)
write.csv(player_stat_SG, file.path(ruta_carpeta, "player_stat_SG_panel.csv"), row.names = FALSE)
teams_stats <- bref_teams_stats( seasons = 2019)
#install.packages("nbastatR")
library(nbastatR)
library(ggplot2)
library(tidyverse)
#install.packages("nbastatR")
library(nbastatR)
library(dplyr)
teams_stats <- bref_teams_stats( seasons = 2019)
teams_stats <- bref_teams_stats( seasons = 2019)
teams_annual_stats()
#Si se presenta algun problema al correr funcion de nbastatR, descomentar la siguiente linea de Sys
Sys.setenv("VROOM_CONNECTION_SIZE" = 999999)
teams_stats <- bref_teams_stats( seasons = 2019)
View(teams_stats)
View(teams_stats)
View(teams_stats[[2]][[1]])
View(teams_stats[[2]][[1]])
rm(list=ls())
teams_stats <- bref_teams_stats( seasons = 2019)
teams_stats <- bref_teams_stats( seasons = 2019, join_data = TRUE)
rm(list=ls())
teams_stats <- bref_teams_stats( seasons = 2019, join_data = TRUE)
View(teams_stats)
View(teams_stats)
rm(list=ls())
teams_stats <- bref_teams_stats( seasons = 2019, join_data = TRUE, nest_data= TRUE)
View(dataBREFTeamJoined)
View(dataBREFTeamJoined)
rm(list=ls())
teams_stats <- bref_teams_stats( seasons = 2019, join_data = TRUE, nest_data= TRUE)
View(dataBREFTeamJoined)
View(dataBREFTeamJoined)
rm(list=ls())
teams_stats <- bref_teams_stats( seasons = 2019)
rm(list=ls())
teams_stats <- bref_teams_stats( seasons = 2011:2023)
teams_stats <- bref_teams_stats( seasons = 2011:2022)
View(dataBREFTeamJoined)
View(dataBREFTeamJoined)
unique(dataBREFTeamJoined$nameTeam)
unique(dataBREFTeamJoined$slugTeamBREF)
player_stats <- bref_players_stats(seasons = 2011:2022, tables = c("per_game","advanced", "totals"), join_data = T)
View(player_stats)
View(player_stats)
## Modificacion de panel para mejor uso
# Recodificando para solo tener 5 categorias para posicion
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG")) %>%
rename(name = namePlayer) %>%
mutate( player_stats, teamAcro = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )%>%
filter(nchar(slugTeamsBREF) <= 3) %>%
# Seleccionando solo columnas relevantes
select( name, yearSeason, agePlayer, position,slugTeamBREF, countGames, pctFG, pctFG3, pctFG2, pctEFG, pctFT,idPlayerNBA,
minutesPerGame,fgmPerGame, fgaPerGame,fg3mPerGame,fg3aPerGame,fg2mPerGame,fg2aPerGame,ftmPerGame,ftaPerGame,orbPerGame,drbPerGame,trbPerGame,astPerGame,stlPerGame,blkPerGame,tovPerGame,pfPerGame,ptsPerGame,
minutes,ratioPER,pctTrueShooting,pct3PRate,pctFTRate,pctORB,pctDRB,pctTRB,pctAST,pctSTL,pctBLK,pctTOV,pctUSG,ratioOWS,ratioDWS,ratioWS,ratioWSPer48,ratioOBPM,ratioDBPM,ratioBPM,ratioVORP,
minutesTotals,fgmTotals,fgaTotals,fg3mTotals,fg3aTotals,fg2mTotals,fg2aTotals,ftmTotals,ftaTotals,orbTotals,drbTotals,trbTotals,astTotals,stlTotals,blkTotals,tovTotals,pfTotals,ptsTotals)%>%
rename(team = teamAcro)
## Modificacion de panel para mejor uso
# Recodificando para solo tener 5 categorias para posicion
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG")) %>%
rename(name = namePlayer) %>%
mutate( player_stats, teamAcro = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )%>%
filter(nchar(slugTeamsBREF) <= 3) %>%
# Seleccionando solo columnas relevantes
select( name, yearSeason, agePlayer, position,slugTeamBREF, countGames, pctFG, pctFG3, pctFG2, pctEFG, pctFT,idPlayerNBA,
minutesPerGame,fgmPerGame, fgaPerGame,fg3mPerGame,fg3aPerGame,fg2mPerGame,fg2aPerGame,ftmPerGame,ftaPerGame,orbPerGame,drbPerGame,trbPerGame,astPerGame,stlPerGame,blkPerGame,tovPerGame,pfPerGame,ptsPerGame,
minutes,ratioPER,pctTrueShooting,pct3PRate,pctFTRate,pctORB,pctDRB,pctTRB,pctAST,pctSTL,pctBLK,pctTOV,pctUSG,ratioOWS,ratioDWS,ratioWS,ratioWSPer48,ratioOBPM,ratioDBPM,ratioBPM,ratioVORP,
minutesTotals,fgmTotals,fgaTotals,fg3mTotals,fg3aTotals,fg2mTotals,fg2aTotals,ftmTotals,ftaTotals,orbTotals,drbTotals,trbTotals,astTotals,stlTotals,blkTotals,tovTotals,pfTotals,ptsTotals)%>%
rename(teamAcro = team)
## Modificacion de panel para mejor uso
# Recodificando para solo tener 5 categorias para posicion
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG")) %>%
rename(name = namePlayer) %>%
mutate( player_stats, teamAcro = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )%>%
filter(nchar(slugTeamsBREF) <= 3) %>%
# Seleccionando solo columnas relevantes
select( name, yearSeason, agePlayer, position, teamAcro, countGames, pctFG, pctFG3, pctFG2, pctEFG, pctFT,idPlayerNBA,
minutesPerGame,fgmPerGame, fgaPerGame,fg3mPerGame,fg3aPerGame,fg2mPerGame,fg2aPerGame,ftmPerGame,ftaPerGame,orbPerGame,drbPerGame,trbPerGame,astPerGame,stlPerGame,blkPerGame,tovPerGame,pfPerGame,ptsPerGame,
minutes,ratioPER,pctTrueShooting,pct3PRate,pctFTRate,pctORB,pctDRB,pctTRB,pctAST,pctSTL,pctBLK,pctTOV,pctUSG,ratioOWS,ratioDWS,ratioWS,ratioWSPer48,ratioOBPM,ratioDBPM,ratioBPM,ratioVORP,
minutesTotals,fgmTotals,fgaTotals,fg3mTotals,fg3aTotals,fg2mTotals,fg2aTotals,ftmTotals,ftaTotals,orbTotals,drbTotals,trbTotals,astTotals,stlTotals,blkTotals,tovTotals,pfTotals,ptsTotals)
View(nba_data)
View(nba_data)
unique(nba_data$teamAcro)
nba_team_data <- mutate( dataBREFTeamJoined, nameTeam = recode( slugPosition, "Charlotte Bobcats" = "Charlotte Hornets", "New Orleans Hornets" = "New Orleans Pelicans", "New Jersey Nets" = "Brooklyn Nets"))%>%
mutate( dataBREFTeamJoined, teamAcro = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )
View(teams_stats)
View(teams_stats)
View(teams_stats[[2]][[1]])
nba_team_data <- mutate( dataBREFTeamJoined, nameTeam = recode( nameTeam, "Charlotte Bobcats" = "Charlotte Hornets", "New Orleans Hornets" = "New Orleans Pelicans", "New Jersey Nets" = "Brooklyn Nets"))%>%
mutate( dataBREFTeamJoined, teamAcro = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )
View(teams_stats)
View(teams_stats)
View(teams_stats[[2]][[1]])
unique(teams_stats$teamAcro)
unique(teams_stats$teamAcro)
unique(teams_stats$nameAcro)
View(nba_team_data)
View(nba_team_data)
unique(nba_team_data$nameTeam)
nba_team_data <- mutate( dataBREFTeamJoined, Team_name = recode( nameTeam, "Charlotte Bobcats" = "Charlotte Hornets", "New Orleans Hornets" = "New Orleans Pelicans", "New Jersey Nets" = "Brooklyn Nets"))%>%
mutate( dataBREFTeamJoined, teamAcro = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )
unique(nba_team_data$Team_name)
## Modificacion de panel para mejor uso
# Recodificando para solo tener 5 categorias para posicion
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG")) %>%
rename(name = namePlayer) %>%
mutate( player_stats, team = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )%>%
filter(nchar(slugTeamsBREF) <= 3) %>%
# Seleccionando solo columnas relevantes
select( name, yearSeason, agePlayer, position, team, countGames, pctFG, pctFG3, pctFG2, pctEFG, pctFT,idPlayerNBA,
minutesPerGame,fgmPerGame, fgaPerGame,fg3mPerGame,fg3aPerGame,fg2mPerGame,fg2aPerGame,ftmPerGame,ftaPerGame,orbPerGame,drbPerGame,trbPerGame,astPerGame,stlPerGame,blkPerGame,tovPerGame,pfPerGame,ptsPerGame,
minutes,ratioPER,pctTrueShooting,pct3PRate,pctFTRate,pctORB,pctDRB,pctTRB,pctAST,pctSTL,pctBLK,pctTOV,pctUSG,ratioOWS,ratioDWS,ratioWS,ratioWSPer48,ratioOBPM,ratioDBPM,ratioBPM,ratioVORP,
minutesTotals,fgmTotals,fgaTotals,fg3mTotals,fg3aTotals,fg2mTotals,fg2aTotals,ftmTotals,ftaTotals,orbTotals,drbTotals,trbTotals,astTotals,stlTotals,blkTotals,tovTotals,pfTotals,ptsTotals)
nba_team_data <- mutate( dataBREFTeamJoined, nteam = recode( nameTeam, "Charlotte Bobcats" = "Charlotte Hornets", "New Orleans Hornets" = "New Orleans Pelicans", "New Jersey Nets" = "Brooklyn Nets"))%>%
mutate( dataBREFTeamJoined, team = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )
View(nba_team_data)
View(nba_team_data)
nba_team_data <- mutate( dataBREFTeamJoined, nteam = recode( nameTeam, "Charlotte Bobcats" = "Charlotte Hornets", "New Orleans Hornets" = "New Orleans Pelicans", "New Jersey Nets" = "Brooklyn Nets"))%>%
mutate( dataBREFTeamJoined, team = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )
View(nba_team_data)
View(nba_team_data)
unique(nba_team_data$team)
unique(nba_team_data$nteam)
colnames(nba_team_data)
nba_team_data <- mutate( dataBREFTeamJoined, nteam = recode( nameTeam, "Charlotte Bobcats" = "Charlotte Hornets", "New Orleans Hornets" = "New Orleans Pelicans", "New Jersey Nets" = "Brooklyn Nets"))%>%
mutate( dataBREFTeamJoined, team = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )%>%
select( yearSeason, team, nteam, winsTeam, lossesTeam, pctWins, gamesBehind1DivisionStandingsDiv, ptsOppPerGameStandingsDiv,
ptsTeamPerGameStandingsDiv, ratingStrengthOfScheduleStandingsDiv, gamesBehind1ConferenceStandingsConf, ptsOppPerGameStandingsConf,
ptsTeamPerGameStandingsConf, ratingStrengthOfScheduleStandingsConf, astPerGameOpponent, astPerGameTeam, blkPerGameOpponent,
blkPerGameTeam, drbPerGameOpponent, drbPerGameTeam, fg2aPerGameOpponent, fg2aPerGameTeam, fg2mPerGameOpponent, fg2mPerGameTeam,
fg3aPerGameOpponent, fg3aPerGameTeam, fg3mPerGameOpponent, fg3mPerGameTeam, fgaPerGameOpponent, fgaPerGameTeam, fgmPerGameOpponent,
fgmPerGameTeam, ftaPerGameOpponent, ftaPerGameTeam, ftmPerGameOpponent, ftmPerGameTeam, minutesPerGameOpponent, minutesPerGameTeam,
numberPlayerPerGameOpponent, numberPlayerPerGameTeam, orbPerGameOpponent, orbPerGameTeam, pctFG2PerGameOpponent, pctFG2PerGameTeam,
pctFG3PerGameOpponent, pctFG3PerGameTeam, pctFGPerGameOpponent, pctFGPerGameTeam, pctFTPerGameOpponent, pctFTPerGameTeam, pfPerGameOpponent,
pfPerGameTeam, ptsPerGameOpponent, ptsPerGameTeam, stlPerGameOpponent, stlPerGameTeam, tovPerGameOpponent, tovPerGameTeam,
trbPerGameOpponent, trbPerGameTeam, astTotalsOpponent, astTotalsTeam, blkTotalsOpponent, blkTotalsTeam, drbTotalsOpponent,
drbTotalsTeam, fg2aTotalsOpponent, fg2aTotalsTeam, fg2mTotalsOpponent, fg2mTotalsTeam, fg3aTotalsOpponent, fg3aTotalsTeam,
fg3mTotalsOpponent, fg3mTotalsTeam, fgaTotalsOpponent, fgaTotalsTeam, fgmTotalsOpponent, fgmTotalsTeam, ftaTotalsOpponent,
ftaTotalsTeam, ftmTotalsOpponent, ftmTotalsTeam, minutesTotalsOpponent, minutesTotalsTeam, numberPlayerTotalsOpponent,
numberPlayerTotalsTeam, orbTotalsOpponent, orbTotalsTeam, pctFG2TotalsOpponent, pctFG2TotalsTeam, pctFG3TotalsOpponent,
pctFG3TotalsTeam, pctFGTotalsOpponent, pctFGTotalsTeam, pctFTTotalsOpponent, pctFTTotalsTeam, pfTotalsOpponent, pfTotalsTeam,
ptsTotalsOpponent, ptsTotalsTeam, stlTotalsOpponent, stlTotalsTeam, tovTotalsOpponent, tovTotalsTeam, trbTotalsOpponent,
trbTotalsTeam, astPerPossTeam, blkPerPossTeam, drbPerPossTeam, fg2aPerPossTeam, fg2mPerPossTeam, fg3aPerPossTeam,
fg3mPerPossTeam, fgaPerPossTeam, fgmPerPossTeam, ftaPerPossTeam, ftmPerPossTeam, minutesPerPossTeam, numberPlayerPerPossTeam,
orbPerPossTeam, pctFG2PerPossTeam, pctFG3PerPossTeam, pctFGPerPossTeam)
nba_franchise_history(return_message = T, only_active = F)
team_finance <- read.csv("teams_finance.csv")
getwd()
## Team salaries
setwd("C:/Users/famwa/Tesina/NBA/Scripts/NBA_R")
team_finance <- read.csv("teams_finance.csv")
unique(team_finance$Team)
nba_team_data <- mutate( dataBREFTeamJoined, nteam = recode( nameTeam, "Charlotte Bobcats" = "Charlotte Hornets", "New Orleans Hornets" = "New Orleans Pelicans", "New Jersey Nets" = "Brooklyn Nets"))%>%
mutate( dataBREFTeamJoined, team = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )%>%
select( yearSeason, team, nteam, winsTeam, lossesTeam, pctWins,)
unique(team_finance$Team)
unique(nba_team_data$Team)
unique(nba_team_data$team)
sort(unique(team_finance$Team))
sort(unique(nba_team_data$team))
team_finance <- read.csv("teams_finance.csv")
sort(unique(team_finance$Team))
sort(unique(nba_team_data$team))
team_finance <- read.csv("teams_finance.csv")
complete_data_teams <- merge(nba_team_data, team_finance, by = c("team", "yearSeason"), all.x = TRUE)
View(df_dict_nba_players)
nba_team_data <- mutate( dataBREFTeamJoined, nteam = recode( nameTeam, "Charlotte Bobcats" = "Charlotte Hornets", "New Orleans Hornets" = "New Orleans Pelicans", "New Jersey Nets" = "Brooklyn Nets"))%>%
mutate( dataBREFTeamJoined, team = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )%>%
select( yearSeason, team, nteam, winsTeam, lossesTeam, pctWins)
View(nba_team_data)
View(nba_team_data)
sort(unique(nba_team_data$team))
View(nba_team_data)
View(nba_team_data)
sort(unique(nba_team_data$nteam))
View(dataBREFTeamJoined)
View(dataBREFTeamJoined)
View(teams_stats)
View(teams_stats)
View(teams_stats[[2]][[1]])
View(teams_stats[[2]][[1]])
teams_stats <- bref_teams_stats( seasons = 2011:2022)
?bref_teams_stats
teams_stats <- bref_teams_stats( seasons = 2011:2022, widen_data = FALSE)
View(dataBREFTeamJoined)
View(dataBREFTeamJoined)
nba_team_data <- mutate( dataBREFTeamJoined, nteam = recode( nameTeam, "Charlotte Bobcats" = "Charlotte Hornets", "New Orleans Hornets" = "New Orleans Pelicans", "New Jersey Nets" = "Brooklyn Nets"))%>%
mutate( dataBREFTeamJoined, team = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )%>%
select( yearSeason, team, nteam, winsTeam, lossesTeam, pctWins)
View(dataBREFTeamJoined)
View(dataBREFTeamJoined)
View(dataBREFTeamJoined)
nba_team_data <- mutate( dataBREFTeamJoined, nteam = recode( nameTeam, "Charlotte Bobcats" = "Charlotte Hornets", "New Orleans Hornets" = "New Orleans Pelicans", "New Jersey Nets" = "Brooklyn Nets"))%>%
mutate( dataBREFTeamJoined, team = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )%>%
select( yearSeason, team, nteam, winsTeam, lossesTeam, pctWins)%>%
slice(1:360)
View(nba_team_data)
View(nba_team_data)
complete_data_teams <- merge(nba_team_data, team_finance, by = c("team", "yearSeason"), all.x = TRUE)
View(complete_data_teams)
View(complete_data_teams)
# Realiza la unión de los data frames
panel_completo <- merge(stats, finance, by = columnas_clave, all.x = TRUE)
for (posicion in unique_pos) {
team_victories <- paste("team_victories", posicion, sep = "_")
assign( team_victories, subset(complete_data_teams, yearSeason == posicion))
}
unique_pos <- unique(complete_data_teams$yearSeason)
for (posicion in unique_pos) {
team_victories <- paste("team_victories", posicion, sep = "_")
assign( team_victories, subset(complete_data_teams, yearSeason == posicion))
}
write.csv(complete_data_teams, file.path(ruta_carpeta, "team_victories_panel.csv"), row.names = FALSE)
#Especificar la ruta donde se guardara
ruta_carpeta <- "C:/Users/famwa/Tesina/NBA/Data/Panel"
write.csv(complete_data_teams, file.path(ruta_carpeta, "team_victories_panel.csv"), row.names = FALSE)
write.csv(team_victories_2011, file.path(ruta_carpeta, "team_victories_2011.csv"), row.names = FALSE)
write.csv(team_victories_2012, file.path(ruta_carpeta, "team_victories_2012.csv"), row.names = FALSE)
write.csv(team_victories_2013, file.path(ruta_carpeta, "team_victories_2013.csv"), row.names = FALSE)
write.csv(team_victories_2014, file.path(ruta_carpeta, "team_victories_2014.csv"), row.names = FALSE)
write.csv(team_victories_2015, file.path(ruta_carpeta, "team_victories_2015.csv"), row.names = FALSE)
write.csv(team_victories_2016, file.path(ruta_carpeta, "team_victories_2016.csv"), row.names = FALSE)
write.csv(team_victories_2017, file.path(ruta_carpeta, "team_victories_2017.csv"), row.names = FALSE)
write.csv(team_victories_2018, file.path(ruta_carpeta, "team_victories_2018.csv"), row.names = FALSE)
write.csv(team_victories_2019, file.path(ruta_carpeta, "team_victories_2019.csv"), row.names = FALSE)
write.csv(team_victories_2020, file.path(ruta_carpeta, "team_victories_2020.csv"), row.names = FALSE)
write.csv(team_victories_2021, file.path(ruta_carpeta, "team_victories_2021.csv"), row.names = FALSE)
write.csv(team_victories_2022, file.path(ruta_carpeta, "team_victories_202.csv"), row.names = FALSE)
#Especificar la ruta donde se guardara
ruta_carpeta <- "C:/Users/famwa/Tesina/NBA/Data/Teams"
write.csv(complete_data_teams, file.path(ruta_carpeta, "team_victories_panel.csv"), row.names = FALSE)
write.csv(team_victories_2011, file.path(ruta_carpeta, "team_victories_2011.csv"), row.names = FALSE)
write.csv(team_victories_2012, file.path(ruta_carpeta, "team_victories_2012.csv"), row.names = FALSE)
write.csv(team_victories_2013, file.path(ruta_carpeta, "team_victories_2013.csv"), row.names = FALSE)
write.csv(team_victories_2014, file.path(ruta_carpeta, "team_victories_2014.csv"), row.names = FALSE)
write.csv(team_victories_2015, file.path(ruta_carpeta, "team_victories_2015.csv"), row.names = FALSE)
write.csv(team_victories_2016, file.path(ruta_carpeta, "team_victories_2016.csv"), row.names = FALSE)
write.csv(team_victories_2017, file.path(ruta_carpeta, "team_victories_2017.csv"), row.names = FALSE)
write.csv(team_victories_2018, file.path(ruta_carpeta, "team_victories_2018.csv"), row.names = FALSE)
write.csv(team_victories_2019, file.path(ruta_carpeta, "team_victories_2019.csv"), row.names = FALSE)
write.csv(team_victories_2020, file.path(ruta_carpeta, "team_victories_2020.csv"), row.names = FALSE)
write.csv(team_victories_2021, file.path(ruta_carpeta, "team_victories_2021.csv"), row.names = FALSE)
write.csv(team_victories_2022, file.path(ruta_carpeta, "team_victories_202.csv"), row.names = FALSE)
## Modificacion de panel para mejor uso
# Recodificando para solo tener 5 categorias para posicion
nba_data <- mutate( player_stats, position = recode( slugPosition, "SF-SG" = "SF", "PG-SG" = "PG", "C-PF" = "C", "PF-SF" = "PF", "SG-PG" = "SG", "SF-PF"= "SF", "SG-SF" = "SG", "PF-C" = "PF", "SG-PF"= "SG", "SF-C"= "SF", "SG-PG-SF" = "SG")) %>%
rename(name = namePlayer) %>%
mutate( player_stats, team = recode (slugTeamBREF, "CHO" = "CHA", "NJN" = "BRK" , "NOH" = "NOP") )%>%
filter(nchar(slugTeamsBREF) <= 3) %>%
# Seleccionando solo columnas relevantes
select( name, yearSeason, agePlayer, position, team, countGames, pctFG, pctFG3, pctFG2, pctEFG, pctFT,idPlayerNBA,
minutesPerGame,fgmPerGame, fgaPerGame,fg3mPerGame,fg3aPerGame,fg2mPerGame,fg2aPerGame,ftmPerGame,ftaPerGame,orbPerGame,drbPerGame,trbPerGame,astPerGame,stlPerGame,blkPerGame,tovPerGame,pfPerGame,ptsPerGame,
minutes,ratioPER,pctTrueShooting,pct3PRate,pctFTRate,pctORB,pctDRB,pctTRB,pctAST,pctSTL,pctBLK,pctTOV,pctUSG,ratioOWS,ratioDWS,ratioWS,ratioWSPer48,ratioOBPM,ratioDBPM,ratioBPM,ratioVORP,
minutesTotals,fgmTotals,fgaTotals,fg3mTotals,fg3aTotals,fg2mTotals,fg2aTotals,ftmTotals,ftaTotals,orbTotals,drbTotals,trbTotals,astTotals,stlTotals,blkTotals,tovTotals,pfTotals,ptsTotals)
View(nba_data)
View(nba_data)
for (posicion in unique_pos) {
player_stat <- paste("player_stat", posicion, sep = "_")
assign( player_stat, subset(complete_data_teams, yearSeason == posicion))
}
ruta_carpeta <- "C:/Users/famwa/Tesina/NBA/Data/Teams"
write.csv(nba_data, file.path(ruta_carpeta, "player_stat_panel.csv"), row.names = FALSE)
write.csv(player_stat_2011, file.path(ruta_carpeta, "player_stat_2011.csv"), row.names = FALSE)
write.csv(player_stat_2012, file.path(ruta_carpeta, "player_stat_2012.csv"), row.names = FALSE)
write.csv(player_stat_2013, file.path(ruta_carpeta, "player_stat_2013.csv"), row.names = FALSE)
write.csv(player_stat_2014, file.path(ruta_carpeta, "player_stat_2014.csv"), row.names = FALSE)
write.csv(player_stat_2015, file.path(ruta_carpeta, "player_stat_2015.csv"), row.names = FALSE)
write.csv(player_stat_2016, file.path(ruta_carpeta, "player_stat_2016.csv"), row.names = FALSE)
write.csv(player_stat_2017, file.path(ruta_carpeta, "player_stat_2017.csv"), row.names = FALSE)
write.csv(player_stat_2018, file.path(ruta_carpeta, "player_stat_2018.csv"), row.names = FALSE)
write.csv(player_stat_2019, file.path(ruta_carpeta, "player_stat_2019.csv"), row.names = FALSE)
write.csv(player_stat_2020, file.path(ruta_carpeta, "player_stat_2020.csv"), row.names = FALSE)
write.csv(player_stat_2021, file.path(ruta_carpeta, "player_stat_2021.csv"), row.names = FALSE)
write.csv(player_stat_2022, file.path(ruta_carpeta, "player_stat_2022.csv"), row.names = FALSE)
ruta_carpeta <- "C:/Users/famwa/Tesina/NBA/Data/Teams"
write.csv(nba_data, file.path(ruta_carpeta, "player_stat_panel.csv"), row.names = FALSE)
write.csv(player_stat_2011, file.path(ruta_carpeta, "player_stat_2011.csv"), row.names = FALSE)
write.csv(player_stat_2012, file.path(ruta_carpeta, "player_stat_2012.csv"), row.names = FALSE)
write.csv(player_stat_2013, file.path(ruta_carpeta, "player_stat_2013.csv"), row.names = FALSE)
write.csv(player_stat_2014, file.path(ruta_carpeta, "player_stat_2014.csv"), row.names = FALSE)
write.csv(player_stat_2015, file.path(ruta_carpeta, "player_stat_2015.csv"), row.names = FALSE)
write.csv(player_stat_2016, file.path(ruta_carpeta, "player_stat_2016.csv"), row.names = FALSE)
write.csv(player_stat_2017, file.path(ruta_carpeta, "player_stat_2017.csv"), row.names = FALSE)
write.csv(player_stat_2018, file.path(ruta_carpeta, "player_stat_2018.csv"), row.names = FALSE)
write.csv(player_stat_2019, file.path(ruta_carpeta, "player_stat_2019.csv"), row.names = FALSE)
write.csv(player_stat_2020, file.path(ruta_carpeta, "player_stat_2020.csv"), row.names = FALSE)
write.csv(player_stat_2021, file.path(ruta_carpeta, "player_stat_2021.csv"), row.names = FALSE)
write.csv(player_stat_2022, file.path(ruta_carpeta, "player_stat_2022.csv"), row.names = FALSE)
ruta_carpeta <- "C:/Users/famwa/Tesina/NBA/Data/Stats"
write.csv(nba_data, file.path(ruta_carpeta, "player_stat_panel.csv"), row.names = FALSE)
write.csv(player_stat_2011, file.path(ruta_carpeta, "player_stat_2011.csv"), row.names = FALSE)
write.csv(player_stat_2012, file.path(ruta_carpeta, "player_stat_2012.csv"), row.names = FALSE)
write.csv(player_stat_2013, file.path(ruta_carpeta, "player_stat_2013.csv"), row.names = FALSE)
write.csv(player_stat_2014, file.path(ruta_carpeta, "player_stat_2014.csv"), row.names = FALSE)
write.csv(player_stat_2015, file.path(ruta_carpeta, "player_stat_2015.csv"), row.names = FALSE)
write.csv(player_stat_2016, file.path(ruta_carpeta, "player_stat_2016.csv"), row.names = FALSE)
write.csv(player_stat_2017, file.path(ruta_carpeta, "player_stat_2017.csv"), row.names = FALSE)
write.csv(player_stat_2018, file.path(ruta_carpeta, "player_stat_2018.csv"), row.names = FALSE)
write.csv(player_stat_2019, file.path(ruta_carpeta, "player_stat_2019.csv"), row.names = FALSE)
write.csv(player_stat_2020, file.path(ruta_carpeta, "player_stat_2020.csv"), row.names = FALSE)
write.csv(player_stat_2021, file.path(ruta_carpeta, "player_stat_2021.csv"), row.names = FALSE)
write.csv(player_stat_2022, file.path(ruta_carpeta, "player_stat_2022.csv"), row.names = FALSE)
